protected void METHOD_1 ( String changeId , int psId ) throws OrmException { TYPE_1 VAR_2 = VAR_3 . create ( METHOD_2 ( VAR_1 . get ( ) . METHOD_3 ( changeId ) ) . change ( ) ) ; PatchSetApproval VAR_4 = VAR_5 . METHOD_5 ( db , VAR_2 , new PatchSet . Id ( VAR_2 . getChangeId ( ) , psId ) ) ; assertThat ( VAR_4 ) . METHOD_6 ( ) ; }
protected void METHOD_1 ( TYPE_1 < ? > VAR_1 , boolean VAR_2 ) throws IOException { METHOD_2 ( VAR_1 , VAR_2 ) ; RevCommit VAR_3 = METHOD_3 ( ) ; assertThat ( VAR_3 . METHOD_4 ( STRING_1 ) ) . METHOD_5 ( ) ; assertThat ( VAR_3 . METHOD_4 ( STRING_2 ) ) . METHOD_5 ( ) ; }
private String METHOD_1 ( ) throws IOException { try ( Repository repo = VAR_1 . METHOD_2 ( project ) ; TYPE_1 rw = new TYPE_1 ( repo ) ) { ObjectId VAR_2 = repo . METHOD_3 ( STRING_1 ) ; ObjectId VAR_3 = repo . METHOD_3 ( STRING_2 ) ; return METHOD_4 ( repo , VAR_2 , VAR_3 ) ; } }
private String METHOD_1 ( Repository repo , ObjectId VAR_1 , ObjectId VAR_2 ) throws IOException { TYPE_1 out = new TYPE_1 ( ) ; try ( TYPE_2 VAR_3 = new TYPE_2 ( out ) ) { VAR_3 . METHOD_2 ( repo ) ; VAR_3 . format ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; return out . toString ( ) ; } }
private void METHOD_1 ( TYPE_1 VAR_1 ) { String VAR_2 = VAR_1 . METHOD_3 ( ) ? STRING_1 : STRING_2 ; VAR_3 . METHOD_4 ( VAR_2 ) ; TYPE_2 VAR_4 = VAR_1 . METHOD_5 ( ) ; if ( VAR_4 != null ) { VAR_3 . METHOD_6 ( STRING_3 , METHOD_7 ( VAR_4 ) ) ; } METHOD_8 ( VAR_1 ) ; VAR_3 . close ( VAR_2 ) ; }
public TYPE_1 apply ( TYPE_2 VAR_1 , TYPE_3 in ) throws TYPE_4 , Exception { if ( in == null ) { throw new TYPE_4 ( STRING_1 ) ; } if ( ! METHOD_1 ( in ) ) { throw new TYPE_4 ( STRING_2 ) ; } return METHOD_2 ( METHOD_3 ( VAR_2 , VAR_3 , in ) ) ; }
boolean METHOD_1 ( ) { List < String > projects = config . METHOD_2 ( ) ; boolean VAR_1 = ( projects . size ( ) == 1 ) ; if ( VAR_1 ) { String VAR_2 = projects . get ( 0 ) ; if ( TYPE_1 . METHOD_3 ( VAR_2 ) != VAR_3 ) { VAR_1 = false ; } } return VAR_1 ; }
